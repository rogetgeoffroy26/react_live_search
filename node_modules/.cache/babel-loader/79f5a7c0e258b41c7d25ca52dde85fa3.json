{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.setSuggestionsSearchValue = setSuggestionsSearchValue;\nexports.clearSuggestionsSearchValue = clearSuggestionsSearchValue;\nexports.updateAnalyticsConfig = updateAnalyticsConfig;\nexports.recordResultClick = recordResultClick;\nexports.recordSuggestionClick = recordSuggestionClick;\n\nvar _constants = require('../constants');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction setSuggestionsSearchValue(value) {\n  return {\n    type: _constants.SET_SUGGESTIONS_SEARCH_VALUE,\n    value: value\n  };\n}\n\nfunction clearSuggestionsSearchValue() {\n  return {\n    type: _constants.CLEAR_SUGGESTIONS_SEARCH_VALUE\n  };\n}\n\nfunction updateAnalyticsConfig(analyticsConfig) {\n  return {\n    type: _constants.UPDATE_ANALYTICS_CONFIG,\n    analyticsConfig: analyticsConfig\n  };\n}\n\nfunction recordClick(_ref) {\n  var url = _ref.url,\n      app = _ref.app,\n      credentials = _ref.credentials,\n      headers = _ref.headers,\n      documentId = _ref.documentId,\n      clickPosition = _ref.clickPosition,\n      queryId = _ref.queryId,\n      clickType = _ref.clickType;\n\n  if (!documentId) {\n    console.warn('ReactiveSearch: document id is required to record the click analytics');\n  } else {\n    fetch(url + '/' + app + '/_analytics/click', {\n      method: 'PUT',\n      body: JSON.stringify({\n        query_id: queryId,\n        click_type: clickType || 'result',\n        click_on: _defineProperty({}, documentId, clickPosition + 1)\n      }),\n      headers: _extends({}, headers, {\n        'Content-Type': 'application/json',\n        Authorization: 'Basic ' + btoa(credentials)\n      })\n    });\n  }\n}\n\nfunction recordResultClick(searchPosition, documentId) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        config = _getState.config,\n        searchId = _getState.analytics.searchId,\n        headers = _getState.headers,\n        _getState$appbaseRef = _getState.appbaseRef,\n        url = _getState$appbaseRef.url,\n        protocol = _getState$appbaseRef.protocol,\n        credentials = _getState$appbaseRef.credentials;\n\n    var app = config.app;\n    var esURL = protocol + '://' + url;\n\n    if (config.analytics && searchId) {\n      var parsedHeaders = headers;\n      delete parsedHeaders['X-Search-Query'];\n      var parsedURL = (esURL || '').replace(/\\/+$/, '');\n\n      if (parsedURL.includes('scalr.api.appbase.io')) {\n        fetch(parsedURL + '/' + app + '/_analytics', {\n          method: 'POST',\n          headers: _extends({}, parsedHeaders, {\n            'Content-Type': 'application/json',\n            Authorization: 'Basic ' + btoa(credentials),\n            'X-Search-Id': searchId,\n            'X-Search-Click': true,\n            'X-Search-ClickPosition': searchPosition + 1\n          })\n        });\n      } else {\n        recordClick({\n          url: parsedURL,\n          app: app,\n          credentials: credentials,\n          parsedHeaders: parsedHeaders,\n          documentId: documentId,\n          clickPosition: searchPosition,\n          queryId: searchId\n        });\n      }\n    }\n  };\n}\n\nfunction recordSuggestionClick(searchPosition, documentId) {\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        config = _getState2.config,\n        suggestionsSearchId = _getState2.analytics.suggestionsSearchId,\n        headers = _getState2.headers,\n        _getState2$appbaseRef = _getState2.appbaseRef,\n        url = _getState2$appbaseRef.url,\n        protocol = _getState2$appbaseRef.protocol,\n        credentials = _getState2$appbaseRef.credentials;\n\n    var app = config.app;\n    var esURL = protocol + '://' + url;\n\n    if (config.analytics && suggestionsSearchId && searchPosition !== undefined) {\n      var parsedHeaders = headers;\n      delete parsedHeaders['X-Search-Query'];\n      var parsedURL = (esURL || '').replace(/\\/+$/, '');\n\n      if (parsedURL.includes('scalr.api.appbase.io')) {\n        fetch(parsedURL + '/' + app + '/_analytics', {\n          method: 'POST',\n          headers: _extends({}, parsedHeaders, {\n            'Content-Type': 'application/json',\n            Authorization: 'Basic ' + btoa(credentials),\n            'X-Search-Id': suggestionsSearchId,\n            'X-Search-Suggestions-Click': true,\n            'X-Search-Suggestions-ClickPosition': searchPosition + 1\n          })\n        });\n      } else {\n        recordClick({\n          url: parsedURL,\n          app: app,\n          credentials: credentials,\n          parsedHeaders: parsedHeaders,\n          documentId: documentId,\n          clickPosition: searchPosition,\n          clickType: 'suggestion',\n          queryId: suggestionsSearchId\n        });\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/node_modules/@appbaseio/reactivecore/lib/actions/analytics.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","setSuggestionsSearchValue","clearSuggestionsSearchValue","updateAnalyticsConfig","recordResultClick","recordSuggestionClick","_constants","require","_defineProperty","obj","enumerable","configurable","writable","type","SET_SUGGESTIONS_SEARCH_VALUE","CLEAR_SUGGESTIONS_SEARCH_VALUE","analyticsConfig","UPDATE_ANALYTICS_CONFIG","recordClick","_ref","url","app","credentials","headers","documentId","clickPosition","queryId","clickType","console","warn","fetch","method","body","JSON","stringify","query_id","click_type","click_on","Authorization","btoa","searchPosition","dispatch","getState","_getState","config","searchId","analytics","_getState$appbaseRef","appbaseRef","protocol","esURL","parsedHeaders","parsedURL","replace","includes","_getState2","suggestionsSearchId","_getState2$appbaseRef","undefined"],"mappings":"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","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.setSuggestionsSearchValue=setSuggestionsSearchValue;exports.clearSuggestionsSearchValue=clearSuggestionsSearchValue;exports.updateAnalyticsConfig=updateAnalyticsConfig;exports.recordResultClick=recordResultClick;exports.recordSuggestionClick=recordSuggestionClick;var _constants=require('../constants');function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function setSuggestionsSearchValue(value){return{type:_constants.SET_SUGGESTIONS_SEARCH_VALUE,value:value};}function clearSuggestionsSearchValue(){return{type:_constants.CLEAR_SUGGESTIONS_SEARCH_VALUE};}function updateAnalyticsConfig(analyticsConfig){return{type:_constants.UPDATE_ANALYTICS_CONFIG,analyticsConfig:analyticsConfig};}function recordClick(_ref){var url=_ref.url,app=_ref.app,credentials=_ref.credentials,headers=_ref.headers,documentId=_ref.documentId,clickPosition=_ref.clickPosition,queryId=_ref.queryId,clickType=_ref.clickType;if(!documentId){console.warn('ReactiveSearch: document id is required to record the click analytics');}else{fetch(url+'/'+app+'/_analytics/click',{method:'PUT',body:JSON.stringify({query_id:queryId,click_type:clickType||'result',click_on:_defineProperty({},documentId,clickPosition+1)}),headers:_extends({},headers,{'Content-Type':'application/json',Authorization:'Basic '+btoa(credentials)})});}}function recordResultClick(searchPosition,documentId){return function(dispatch,getState){var _getState=getState(),config=_getState.config,searchId=_getState.analytics.searchId,headers=_getState.headers,_getState$appbaseRef=_getState.appbaseRef,url=_getState$appbaseRef.url,protocol=_getState$appbaseRef.protocol,credentials=_getState$appbaseRef.credentials;var app=config.app;var esURL=protocol+'://'+url;if(config.analytics&&searchId){var parsedHeaders=headers;delete parsedHeaders['X-Search-Query'];var parsedURL=(esURL||'').replace(/\\/+$/,'');if(parsedURL.includes('scalr.api.appbase.io')){fetch(parsedURL+'/'+app+'/_analytics',{method:'POST',headers:_extends({},parsedHeaders,{'Content-Type':'application/json',Authorization:'Basic '+btoa(credentials),'X-Search-Id':searchId,'X-Search-Click':true,'X-Search-ClickPosition':searchPosition+1})});}else{recordClick({url:parsedURL,app:app,credentials:credentials,parsedHeaders:parsedHeaders,documentId:documentId,clickPosition:searchPosition,queryId:searchId});}}};}function recordSuggestionClick(searchPosition,documentId){return function(dispatch,getState){var _getState2=getState(),config=_getState2.config,suggestionsSearchId=_getState2.analytics.suggestionsSearchId,headers=_getState2.headers,_getState2$appbaseRef=_getState2.appbaseRef,url=_getState2$appbaseRef.url,protocol=_getState2$appbaseRef.protocol,credentials=_getState2$appbaseRef.credentials;var app=config.app;var esURL=protocol+'://'+url;if(config.analytics&&suggestionsSearchId&&searchPosition!==undefined){var parsedHeaders=headers;delete parsedHeaders['X-Search-Query'];var parsedURL=(esURL||'').replace(/\\/+$/,'');if(parsedURL.includes('scalr.api.appbase.io')){fetch(parsedURL+'/'+app+'/_analytics',{method:'POST',headers:_extends({},parsedHeaders,{'Content-Type':'application/json',Authorization:'Basic '+btoa(credentials),'X-Search-Id':suggestionsSearchId,'X-Search-Suggestions-Click':true,'X-Search-Suggestions-ClickPosition':searchPosition+1})});}else{recordClick({url:parsedURL,app:app,credentials:credentials,parsedHeaders:parsedHeaders,documentId:documentId,clickPosition:searchPosition,clickType:'suggestion',queryId:suggestionsSearchId});}}};}"]},"metadata":{},"sourceType":"script"}