{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('@emotion/core');\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Histogram = require('../../../styles/Histogram');\n\nvar _Histogram2 = _interopRequireDefault(_Histogram);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getWidth = function getWidth(index, range, item, props) {\n  var diff = void 0;\n\n  if (index < range.length - 1) {\n    diff = range[index + 1].key - item.key;\n  } else {\n    diff = props.range.end - item.key;\n  }\n\n  var fullRange = props.range.end - props.range.start;\n  return diff / fullRange * 100 + '%';\n};\n/** @jsx jsx */\n\n\nvar HistogramContainer = function HistogramContainer(props) {\n  var max = props.stats[0].doc_count;\n  props.stats.forEach(function (item) {\n    if (max < item.doc_count) {\n      max = item.doc_count;\n    }\n  });\n  var range = [].concat(props.stats);\n\n  if (props.stats.length) {\n    if (range[0].key > props.range.start) {\n      range = [{\n        key: props.range.start,\n        doc_count: 0\n      }].concat(range);\n    }\n\n    var lastElement = range[range.length - 1];\n\n    if (lastElement.key + props.interval < props.range.end) {\n      range = [].concat(range, [{\n        key: props.interval + lastElement.key,\n        doc_count: 0\n      }]);\n    }\n  }\n\n  return (0, _core.jsx)('div', {\n    css: _Histogram.histogramContainer\n  }, range.map(function (item, index) {\n    return (0, _core.jsx)(_Histogram2.default, {\n      key: item.key,\n      width: getWidth(index, range, item, props),\n      height: (100 * item.doc_count / max || 0) + '%',\n      title: item.doc_count\n    });\n  }));\n};\n\nHistogramContainer.propTypes = {\n  interval: _types2.default.number,\n  range: _types2.default.range,\n  stats: _types2.default.stats\n};\nexports.default = HistogramContainer;","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/node_modules/@appbaseio/reactivesearch/lib/components/range/addons/HistogramContainer.js"],"names":["exports","__esModule","_core","require","_types","_types2","_interopRequireDefault","_Histogram","_Histogram2","obj","default","getWidth","index","range","item","props","diff","length","key","end","fullRange","start","HistogramContainer","max","stats","doc_count","forEach","concat","lastElement","interval","jsx","css","histogramContainer","map","width","height","title","propTypes","number"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('@emotion/core');\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Histogram = require('../../../styles/Histogram');\n\nvar _Histogram2 = _interopRequireDefault(_Histogram);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getWidth = function getWidth(index, range, item, props) {\n\tvar diff = void 0;\n\tif (index < range.length - 1) {\n\t\tdiff = range[index + 1].key - item.key;\n\t} else {\n\t\tdiff = props.range.end - item.key;\n\t}\n\tvar fullRange = props.range.end - props.range.start;\n\treturn diff / fullRange * 100 + '%';\n}; /** @jsx jsx */\n\n\nvar HistogramContainer = function HistogramContainer(props) {\n\tvar max = props.stats[0].doc_count;\n\tprops.stats.forEach(function (item) {\n\t\tif (max < item.doc_count) {\n\t\t\tmax = item.doc_count;\n\t\t}\n\t});\n\n\tvar range = [].concat(props.stats);\n\tif (props.stats.length) {\n\t\tif (range[0].key > props.range.start) {\n\t\t\trange = [{ key: props.range.start, doc_count: 0 }].concat(range);\n\t\t}\n\t\tvar lastElement = range[range.length - 1];\n\t\tif (lastElement.key + props.interval < props.range.end) {\n\t\t\trange = [].concat(range, [{ key: props.interval + lastElement.key, doc_count: 0 }]);\n\t\t}\n\t}\n\n\treturn (0, _core.jsx)(\n\t\t'div',\n\t\t{ css: _Histogram.histogramContainer },\n\t\trange.map(function (item, index) {\n\t\t\treturn (0, _core.jsx)(_Histogram2.default, {\n\t\t\t\tkey: item.key,\n\t\t\t\twidth: getWidth(index, range, item, props),\n\t\t\t\theight: (100 * item.doc_count / max || 0) + '%',\n\t\t\t\ttitle: item.doc_count\n\t\t\t});\n\t\t})\n\t);\n};\n\nHistogramContainer.propTypes = {\n\tinterval: _types2.default.number,\n\trange: _types2.default.range,\n\tstats: _types2.default.stats\n};\n\nexports.default = HistogramContainer;"]},"metadata":{},"sourceType":"script"}