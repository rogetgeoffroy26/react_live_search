{"ast":null,"code":"import fetch from 'cross-fetch';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n} // Function to parse the URL\n\n\nfunction btoa(input) {\n  if (input === void 0) {\n    input = '';\n  }\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var str = input;\n  var output = ''; // eslint-disable-next-line\n\n  for (var block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); // eslint-disable-line no-bitwise\n  output += map.charAt(63 & block >> 8 - i % 1 * 8) // eslint-disable-line no-bitwise\n  ) {\n    charCode = str.charCodeAt(i += 3 / 4);\n\n    if (charCode > 0xff) {\n      throw new Error('\"btoa\" failed: The string to be encoded contains characters outside of the Latin1 range.');\n    }\n\n    block = block << 8 | charCode; // eslint-disable-line no-bitwise\n  }\n\n  return output;\n}\n\nfunction validateIndex(index) {\n  if (!index) {\n    throw new Error('appbase-analytics: A valid index must be present to record analytics events.');\n  }\n}\n\nfunction validateCredentials(credentials) {\n  if (!credentials) {\n    throw new Error('appbase-analytics: Auth credentials is missing.');\n  }\n}\n\nfunction validateURL(url) {\n  if (!url) {\n    throw new Error('appbase-analytics: URL is missing.');\n  }\n}\n\nfunction validateQuery(query, queryID) {\n  if ((query === undefined || query === null) && !queryID) {\n    throw new Error('appbase-analytics: query or queryID must be present to register a click/conversion event');\n  }\n}\n\nfunction validateClickObjects(objects) {\n  if (!objects || Object.keys(objects).length < 1) {\n    throw new Error('appbase-analytics: at least one click object must be present to register a click event');\n  }\n}\n\nfunction validateConversionObjects(objects) {\n  if (!objects || Object.keys(objects).length < 1) {\n    throw new Error('appbase-analytics: at least one click object must be present to register a click event');\n  }\n}\n\nfunction initClient(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var metrics = {\n    credentials: config.credentials,\n    index: config.index,\n    url: config.url,\n    userID: config.userID,\n    globalEventData: config.globalEventData,\n    queryID: '',\n    headers: null\n  };\n  validateIndex(metrics.index);\n  validateCredentials(metrics.credentials);\n  validateURL(metrics.url);\n\n  metrics._request = function (url, body, callback) {\n    var finalBody = _extends({}, body, {\n      user_id: metrics.userID,\n      event_data: _extends({}, body && body.event_data, {}, metrics.globalEventData)\n    });\n\n    return fetch(metrics.url + \"/\" + metrics.index + \"/_analytics/\" + url, {\n      method: 'PUT',\n      headers: _extends({}, metrics.headers, {\n        'Content-Type': 'application/json',\n        Authorization: \"Basic \" + btoa(metrics.credentials)\n      }),\n      body: JSON.stringify(finalBody)\n    }).then(function (response) {\n      if (callback) {\n        callback(null, response);\n      }\n    })[\"catch\"](function (err) {\n      console.error(err);\n\n      if (callback) {\n        callback(err, null);\n      }\n    });\n  }; // To register a search\n\n\n  metrics.search = function (searchConfig, callback) {\n    validateQuery(searchConfig.query, searchConfig.queryID);\n\n    var captureQueryID = function captureQueryID(err, res) {\n      if (res) {\n        res.json().then(function (response) {\n          if (response && response.query_id) {\n            metrics.queryID = response.query_id;\n          }\n        })[\"catch\"](function (error) {\n          console.error(error);\n        });\n      }\n\n      if (callback) {\n        callback(err, res);\n      }\n    }; // just to avoid the flow type error\n\n\n    if (metrics._request) {\n      var requestBody = {\n        query: searchConfig.query,\n        query_id: searchConfig.queryID,\n        event_data: searchConfig.eventData,\n        filters: searchConfig.filters,\n        hits: searchConfig.hits\n      };\n\n      metrics._request('search', requestBody, captureQueryID);\n    }\n  }; // To register a click\n\n\n  metrics.click = function (clickConfig, callback) {\n    validateQuery(clickConfig.query, clickConfig.queryID);\n    validateClickObjects(clickConfig.objects); // just to avoid the flow type error\n\n    if (metrics._request) {\n      var requestBody = {\n        click_on: clickConfig.objects,\n        click_type: clickConfig.isSuggestionClick ? 'suggestion' : 'result',\n        query: clickConfig.query,\n        query_id: clickConfig.queryID,\n        event_data: clickConfig.eventData\n      };\n\n      metrics._request('click', requestBody, callback);\n    }\n  }; // To register a conversion\n\n\n  metrics.conversion = function (conversionConfig, callback) {\n    validateQuery(conversionConfig.query, conversionConfig.queryID);\n    validateConversionObjects(conversionConfig.objects); // just to avoid the flow type error\n\n    if (metrics._request) {\n      var requestBody = {\n        conversion_on: conversionConfig.objects,\n        query: conversionConfig.query,\n        query_id: conversionConfig.queryID,\n        event_data: conversionConfig.eventData\n      };\n\n      metrics._request('conversion', requestBody, callback);\n    }\n  }; // Sets the userID\n\n\n  metrics.setUserID = function (userID) {\n    metrics.userID = userID;\n  }; // Sets the global events\n\n\n  metrics.setGlobalEventData = function (globalEvents) {\n    metrics.globalEventData = globalEvents;\n  }; // Sets the headers\n\n\n  metrics.setHeaders = function (headers) {\n    metrics.headers = headers;\n  };\n\n  return metrics;\n}\n\nvar index = {\n  init: initClient\n};\nexport default index;","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/node_modules/@appbaseio/analytics/dist/@appbaseio/analytics.es.js"],"names":["fetch","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","btoa","input","chars","str","output","block","charCode","map","charAt","charCodeAt","Error","validateIndex","index","validateCredentials","credentials","validateURL","url","validateQuery","query","queryID","undefined","validateClickObjects","objects","keys","validateConversionObjects","initClient","config","metrics","userID","globalEventData","headers","_request","body","callback","finalBody","user_id","event_data","method","Authorization","JSON","stringify","then","response","err","console","error","search","searchConfig","captureQueryID","res","json","query_id","requestBody","eventData","filters","hits","click","clickConfig","click_on","click_type","isSuggestionClick","conversion","conversionConfig","conversion_on","setUserID","setGlobalEventData","globalEvents","setHeaders","init"],"mappings":"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","sourcesContent":["import fetch from 'cross-fetch';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n// Function to parse the URL\nfunction btoa(input) {\n  if (input === void 0) {\n    input = '';\n  }\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var str = input;\n  var output = ''; // eslint-disable-next-line\n\n  for (var block = 0, charCode, i = 0, map = chars; str.charAt(i | 0) || (map = '=', i % 1); // eslint-disable-line no-bitwise\n  output += map.charAt(63 & block >> 8 - i % 1 * 8) // eslint-disable-line no-bitwise\n  ) {\n    charCode = str.charCodeAt(i += 3 / 4);\n\n    if (charCode > 0xff) {\n      throw new Error('\"btoa\" failed: The string to be encoded contains characters outside of the Latin1 range.');\n    }\n\n    block = block << 8 | charCode; // eslint-disable-line no-bitwise\n  }\n\n  return output;\n}\n\nfunction validateIndex(index) {\n  if (!index) {\n    throw new Error('appbase-analytics: A valid index must be present to record analytics events.');\n  }\n}\nfunction validateCredentials(credentials) {\n  if (!credentials) {\n    throw new Error('appbase-analytics: Auth credentials is missing.');\n  }\n}\nfunction validateURL(url) {\n  if (!url) {\n    throw new Error('appbase-analytics: URL is missing.');\n  }\n}\nfunction validateQuery(query, queryID) {\n  if ((query === undefined || query === null) && !queryID) {\n    throw new Error('appbase-analytics: query or queryID must be present to register a click/conversion event');\n  }\n}\nfunction validateClickObjects(objects) {\n  if (!objects || Object.keys(objects).length < 1) {\n    throw new Error('appbase-analytics: at least one click object must be present to register a click event');\n  }\n}\nfunction validateConversionObjects(objects) {\n  if (!objects || Object.keys(objects).length < 1) {\n    throw new Error('appbase-analytics: at least one click object must be present to register a click event');\n  }\n}\n\nfunction initClient(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var metrics = {\n    credentials: config.credentials,\n    index: config.index,\n    url: config.url,\n    userID: config.userID,\n    globalEventData: config.globalEventData,\n    queryID: '',\n    headers: null\n  };\n  validateIndex(metrics.index);\n  validateCredentials(metrics.credentials);\n  validateURL(metrics.url);\n\n  metrics._request = function (url, body, callback) {\n    var finalBody = _extends({}, body, {\n      user_id: metrics.userID,\n      event_data: _extends({}, body && body.event_data, {}, metrics.globalEventData)\n    });\n\n    return fetch(metrics.url + \"/\" + metrics.index + \"/_analytics/\" + url, {\n      method: 'PUT',\n      headers: _extends({}, metrics.headers, {\n        'Content-Type': 'application/json',\n        Authorization: \"Basic \" + btoa(metrics.credentials)\n      }),\n      body: JSON.stringify(finalBody)\n    }).then(function (response) {\n      if (callback) {\n        callback(null, response);\n      }\n    })[\"catch\"](function (err) {\n      console.error(err);\n\n      if (callback) {\n        callback(err, null);\n      }\n    });\n  }; // To register a search\n\n\n  metrics.search = function (searchConfig, callback) {\n    validateQuery(searchConfig.query, searchConfig.queryID);\n\n    var captureQueryID = function captureQueryID(err, res) {\n      if (res) {\n        res.json().then(function (response) {\n          if (response && response.query_id) {\n            metrics.queryID = response.query_id;\n          }\n        })[\"catch\"](function (error) {\n          console.error(error);\n        });\n      }\n\n      if (callback) {\n        callback(err, res);\n      }\n    }; // just to avoid the flow type error\n\n\n    if (metrics._request) {\n      var requestBody = {\n        query: searchConfig.query,\n        query_id: searchConfig.queryID,\n        event_data: searchConfig.eventData,\n        filters: searchConfig.filters,\n        hits: searchConfig.hits\n      };\n\n      metrics._request('search', requestBody, captureQueryID);\n    }\n  }; // To register a click\n\n\n  metrics.click = function (clickConfig, callback) {\n    validateQuery(clickConfig.query, clickConfig.queryID);\n    validateClickObjects(clickConfig.objects); // just to avoid the flow type error\n\n    if (metrics._request) {\n      var requestBody = {\n        click_on: clickConfig.objects,\n        click_type: clickConfig.isSuggestionClick ? 'suggestion' : 'result',\n        query: clickConfig.query,\n        query_id: clickConfig.queryID,\n        event_data: clickConfig.eventData\n      };\n\n      metrics._request('click', requestBody, callback);\n    }\n  }; // To register a conversion\n\n\n  metrics.conversion = function (conversionConfig, callback) {\n    validateQuery(conversionConfig.query, conversionConfig.queryID);\n    validateConversionObjects(conversionConfig.objects); // just to avoid the flow type error\n\n    if (metrics._request) {\n      var requestBody = {\n        conversion_on: conversionConfig.objects,\n        query: conversionConfig.query,\n        query_id: conversionConfig.queryID,\n        event_data: conversionConfig.eventData\n      };\n\n      metrics._request('conversion', requestBody, callback);\n    }\n  }; // Sets the userID\n\n\n  metrics.setUserID = function (userID) {\n    metrics.userID = userID;\n  }; // Sets the global events\n\n\n  metrics.setGlobalEventData = function (globalEvents) {\n    metrics.globalEventData = globalEvents;\n  }; // Sets the headers\n\n\n  metrics.setHeaders = function (headers) {\n    metrics.headers = headers;\n  };\n\n  return metrics;\n}\n\nvar index = {\n  init: initClient\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}