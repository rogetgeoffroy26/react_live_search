{"ast":null,"code":"var _jsxFileName = \"/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Suggestions from 'suggestions';\nconst {\n  API_KEY\n} = process.env;\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest';\nexport default class BasicSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      results: []\n    };\n\n    this.getInfo = () => {\n      axios.get(`${API_URL}?api_key=${API_KEY}&prefix=${this.state.query}&limit=7`).then(({\n        data\n      }) => {\n        this.setState({\n          results: data.data\n        });\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        } else if (!this.state.query) {}\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Suggestions, {\n      results: this.state.results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js"],"names":["React","Component","axios","Suggestions","API_KEY","process","env","API_URL","BasicSearch","state","query","results","getInfo","get","then","data","setState","handleInputChange","search","value","length","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,OAAO,CAACC,GAA5B;AACA,MAAMC,OAAO,GAAG,iDAAhB;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDQ,KADiD,GACzC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KADyC;;AAAA,SAMjDC,OANiD,GAMvC,MAAM;AACdV,MAAAA,KAAK,CAACW,GAAN,CAAW,GAAEN,OAAQ,YAAWH,OAAQ,WAAU,KAAKK,KAAL,CAAWC,KAAM,UAAnE,EACGI,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClB,aAAKC,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAEI,IAAI,CAACA;AADF,SAAd;AAGD,OALH;AAMD,KAbgD;;AAAA,SAejDE,iBAfiD,GAe7B,MAAM;AACxB,WAAKD,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,KAAKQ,MAAL,CAAYC;AADP,OAAd,EAEG,MAAM;AACP,YAAI,KAAKV,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,cAAI,KAAKX,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,GAA0B,CAA1B,KAAgC,CAApC,EAAuC;AACrC,iBAAKR,OAAL;AACD;AACF,SAJD,MAIO,IAAI,CAAC,KAAKH,KAAL,CAAWC,KAAhB,EAAuB,CAC7B;AACF,OATD;AAUD,KA1BgD;AAAA;;AA4BjDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKJ,MAAL,GAAcI,KAF9B;AAGE,MAAA,QAAQ,EAAE,KAAKL,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAvCgD","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Suggestions from 'suggestions'\n\nconst { API_KEY } = process.env\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest'\n\nexport default class BasicSearch extends Component {\n  state = {\n    query: '',\n    results: []\n  }\n\n  getInfo = () => {\n    axios.get(`${API_URL}?api_key=${API_KEY}&prefix=${this.state.query}&limit=7`)\n      .then(({ data }) => {\n        this.setState({\n          results: data.data\n        })\n      })\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      } else if (!this.state.query) {\n      }\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          placeholder=\"Search for...\"\n          ref={input => this.search = input}\n          onChange={this.handleInputChange}\n        />\n        <Suggestions results={this.state.results} />\n      </form>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}