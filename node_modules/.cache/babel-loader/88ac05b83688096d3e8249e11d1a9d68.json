{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar flatten = function flatten(arr) {\n  return arr.reduce(function (flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n  }, []);\n};\n\nvar extractSuggestion = function extractSuggestion(val) {\n  switch (typeof val) {\n    case 'string':\n      return val;\n\n    case 'object':\n      if (Array.isArray(val)) {\n        return flatten(val);\n      }\n\n      return null;\n\n    default:\n      return val;\n  }\n};\n\nfunction replaceDiacritics(s) {\n  var str = s ? String(s) : s;\n  var diacritics = [/[\\300-\\306]/g, /[\\340-\\346]/g, /[\\310-\\313]/g, /[\\350-\\353]/g, /[\\314-\\317]/g, /[\\354-\\357]/g, /[\\322-\\330]/g, /[\\362-\\370]/g, /[\\331-\\334]/g, /[\\371-\\374]/g, /[\\321]/g, /[\\361]/g, /[\\307]/g, /[\\347]/g];\n  var chars = ['A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U', 'u', 'N', 'n', 'C', 'c'];\n\n  for (var i = 0; i < diacritics.length; i += 1) {\n    str = str.replace(diacritics[i], chars[i]);\n  }\n\n  return str;\n}\n\nvar getSuggestions = function getSuggestions(_ref) {\n  var fields = _ref.fields,\n      suggestions = _ref.suggestions,\n      currentValue = _ref.currentValue,\n      _ref$suggestionProper = _ref.suggestionProperties,\n      suggestionProperties = _ref$suggestionProper === undefined ? [] : _ref$suggestionProper,\n      _ref$showDistinctSugg = _ref.showDistinctSuggestions,\n      showDistinctSuggestions = _ref$showDistinctSugg === undefined ? false : _ref$showDistinctSugg;\n  var suggestionsList = [];\n  var labelsList = [];\n  var skipWordMatch = false;\n\n  var populateSuggestionsList = function populateSuggestionsList(val, parsedSource, source) {\n    var isWordMatch = skipWordMatch || currentValue.trim().split(' ').some(function (term) {\n      return replaceDiacritics(val).toLowerCase().includes(replaceDiacritics(term));\n    });\n\n    if (isWordMatch && !labelsList.includes(val) || source._promoted) {\n      var defaultOption = {\n        label: val,\n        value: val,\n        source: source\n      };\n      var additionalKeys = {};\n\n      if (Array.isArray(suggestionProperties) && suggestionProperties.length > 0) {\n        suggestionProperties.forEach(function (prop) {\n          if (parsedSource.hasOwnProperty(prop)) {\n            additionalKeys = _extends({}, additionalKeys, _defineProperty({}, prop, parsedSource[prop]));\n          }\n        });\n      }\n\n      var option = _extends({}, defaultOption, additionalKeys);\n\n      labelsList = [].concat(_toConsumableArray(labelsList), [val]);\n      suggestionsList = [].concat(_toConsumableArray(suggestionsList), [option]);\n\n      if (showDistinctSuggestions) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var parseField = function parseField(parsedSource) {\n    var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parsedSource;\n\n    if (typeof parsedSource === 'object') {\n      var fieldNodes = field.split('.');\n      var label = parsedSource[fieldNodes[0]];\n\n      if (label) {\n        if (fieldNodes.length > 1) {\n          var children = field.substring(fieldNodes[0].length + 1);\n\n          if (Array.isArray(label)) {\n            label.forEach(function (arrayItem) {\n              parseField(arrayItem, children, source);\n            });\n          } else {\n            parseField(label, children, source);\n          }\n        } else {\n          var val = extractSuggestion(label);\n\n          if (val) {\n            if (Array.isArray(val)) {\n              if (showDistinctSuggestions) {\n                return val.some(function (suggestion) {\n                  return populateSuggestionsList(suggestion, parsedSource, source);\n                });\n              }\n\n              val.forEach(function (suggestion) {\n                return populateSuggestionsList(suggestion, parsedSource, source);\n              });\n            }\n\n            return populateSuggestionsList(val, parsedSource, source);\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var traverseSuggestions = function traverseSuggestions() {\n    if (showDistinctSuggestions) {\n      suggestions.forEach(function (item) {\n        fields.some(function (field) {\n          return parseField(item, field);\n        });\n      });\n    } else {\n      suggestions.forEach(function (item) {\n        fields.forEach(function (field) {\n          parseField(item, field);\n        });\n      });\n    }\n  };\n\n  traverseSuggestions();\n\n  if (suggestionsList.length < suggestions.length && !skipWordMatch) {\n    skipWordMatch = true;\n    traverseSuggestions();\n  }\n\n  return suggestionsList;\n};\n\nexports.default = getSuggestions;","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/node_modules/@appbaseio/reactivecore/lib/utils/suggestions.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","_defineProperty","obj","enumerable","configurable","writable","flatten","reduce","flat","toFlatten","concat","extractSuggestion","val","replaceDiacritics","s","str","String","diacritics","chars","replace","getSuggestions","_ref","fields","suggestions","currentValue","_ref$suggestionProper","suggestionProperties","undefined","_ref$showDistinctSugg","showDistinctSuggestions","suggestionsList","labelsList","skipWordMatch","populateSuggestionsList","parsedSource","isWordMatch","trim","split","some","term","toLowerCase","includes","_promoted","defaultOption","label","additionalKeys","forEach","prop","option","parseField","field","fieldNodes","children","substring","arrayItem","suggestion","traverseSuggestions","item","default"],"mappings":"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","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var flatten=function flatten(arr){return arr.reduce(function(flat,toFlatten){return flat.concat(Array.isArray(toFlatten)?flatten(toFlatten):toFlatten);},[]);};var extractSuggestion=function extractSuggestion(val){switch(typeof val){case'string':return val;case'object':if(Array.isArray(val)){return flatten(val);}return null;default:return val;}};function replaceDiacritics(s){var str=s?String(s):s;var diacritics=[/[\\300-\\306]/g,/[\\340-\\346]/g,/[\\310-\\313]/g,/[\\350-\\353]/g,/[\\314-\\317]/g,/[\\354-\\357]/g,/[\\322-\\330]/g,/[\\362-\\370]/g,/[\\331-\\334]/g,/[\\371-\\374]/g,/[\\321]/g,/[\\361]/g,/[\\307]/g,/[\\347]/g];var chars=['A','a','E','e','I','i','O','o','U','u','N','n','C','c'];for(var i=0;i<diacritics.length;i+=1){str=str.replace(diacritics[i],chars[i]);}return str;}var getSuggestions=function getSuggestions(_ref){var fields=_ref.fields,suggestions=_ref.suggestions,currentValue=_ref.currentValue,_ref$suggestionProper=_ref.suggestionProperties,suggestionProperties=_ref$suggestionProper===undefined?[]:_ref$suggestionProper,_ref$showDistinctSugg=_ref.showDistinctSuggestions,showDistinctSuggestions=_ref$showDistinctSugg===undefined?false:_ref$showDistinctSugg;var suggestionsList=[];var labelsList=[];var skipWordMatch=false;var populateSuggestionsList=function populateSuggestionsList(val,parsedSource,source){var isWordMatch=skipWordMatch||currentValue.trim().split(' ').some(function(term){return replaceDiacritics(val).toLowerCase().includes(replaceDiacritics(term));});if(isWordMatch&&!labelsList.includes(val)||source._promoted){var defaultOption={label:val,value:val,source:source};var additionalKeys={};if(Array.isArray(suggestionProperties)&&suggestionProperties.length>0){suggestionProperties.forEach(function(prop){if(parsedSource.hasOwnProperty(prop)){additionalKeys=_extends({},additionalKeys,_defineProperty({},prop,parsedSource[prop]));}});}var option=_extends({},defaultOption,additionalKeys);labelsList=[].concat(_toConsumableArray(labelsList),[val]);suggestionsList=[].concat(_toConsumableArray(suggestionsList),[option]);if(showDistinctSuggestions){return true;}}return false;};var parseField=function parseField(parsedSource){var field=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:parsedSource;if(typeof parsedSource==='object'){var fieldNodes=field.split('.');var label=parsedSource[fieldNodes[0]];if(label){if(fieldNodes.length>1){var children=field.substring(fieldNodes[0].length+1);if(Array.isArray(label)){label.forEach(function(arrayItem){parseField(arrayItem,children,source);});}else{parseField(label,children,source);}}else{var val=extractSuggestion(label);if(val){if(Array.isArray(val)){if(showDistinctSuggestions){return val.some(function(suggestion){return populateSuggestionsList(suggestion,parsedSource,source);});}val.forEach(function(suggestion){return populateSuggestionsList(suggestion,parsedSource,source);});}return populateSuggestionsList(val,parsedSource,source);}}}}return false;};var traverseSuggestions=function traverseSuggestions(){if(showDistinctSuggestions){suggestions.forEach(function(item){fields.some(function(field){return parseField(item,field);});});}else{suggestions.forEach(function(item){fields.forEach(function(field){parseField(item,field);});});}};traverseSuggestions();if(suggestionsList.length<suggestions.length&&!skipWordMatch){skipWordMatch=true;traverseSuggestions();}return suggestionsList;};exports.default=getSuggestions;"]},"metadata":{},"sourceType":"script"}