{"ast":null,"code":"var _jsxFileName = \"/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js\";\n//import React, { Component } from 'react';\n//import axios from 'axios';\n//import Suggestions from './suggestions';\nimport Search from 'react-search';\nimport ReactDOM from 'react-dom';\nimport React, { Component, PropTypes } from 'react'; //const fetchURL = \"https://jsonplaceholder.typicode.com/todos/\";\n//const getItems = () => fetch(fetchURL).then(res => res.json());\n\nexport default class BasicSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: []\n    };\n  }\n\n  getItemsAsync(searchValue, cb) {\n    let url = `https://api.github.com/search/repositories?q=${searchValue}&language=javascript`; //let url = \"https://jsonplaceholder.typicode.com/todos/\";\n\n    fetch(url).then(response => {\n      return response.json();\n    }).then(results => {\n      if (results.items != undefined) {\n        let items = results.items.map((res, i) => {\n          return {\n            id: i,\n            value: res.full_name\n          };\n        });\n        this.setState({\n          repos: items\n        });\n        cb(searchValue);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      items: this.state.repos,\n      multiple: true,\n      getItemsAsync: this.getItemsAsync.bind(this),\n      onItemsChanged: this.HiItems.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js"],"names":["Search","ReactDOM","React","Component","PropTypes","BasicSearch","constructor","props","state","repos","getItemsAsync","searchValue","cb","url","fetch","then","response","json","results","items","undefined","map","res","i","id","value","full_name","setState","render","bind","HiItems"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C,C,CAEA;AACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAC/CG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACF;;AAEDC,EAAAA,aAAa,CAACC,WAAD,EAAcC,EAAd,EAAkB;AAC5B,QAAIC,GAAG,GAAI,gDAA+CF,WAAY,sBAAtE,CAD4B,CAE5B;;AAEAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAkBC,QAAD,IAAc;AAC5B,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACF,KAFD,EAEGF,IAFH,CAESG,OAAD,IAAa;AAClB,UAAGA,OAAO,CAACC,KAAR,IAAiBC,SAApB,EAA8B;AAC9B,YAAID,KAAK,GAAGD,OAAO,CAACC,KAAR,CAAcE,GAAd,CAAmB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAAE,iBAAO;AAAEC,YAAAA,EAAE,EAAED,CAAN;AAASE,YAAAA,KAAK,EAAEH,GAAG,CAACI;AAApB,WAAP;AAAwC,SAAzE,CAAZ;AACA,aAAKC,QAAL,CAAc;AAAElB,UAAAA,KAAK,EAAEU;AAAT,SAAd;AACAP,QAAAA,EAAE,CAACD,WAAD,CAAF;AACC;AACH,KARD;AASF;;AAEDiB,EAAAA,MAAM,GAAI;AACP,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KAA1B;AACS,MAAA,QAAQ,EAAE,IADnB;AAES,MAAA,aAAa,EAAE,KAAKC,aAAL,CAAmBmB,IAAnB,CAAwB,IAAxB,CAFxB;AAGS,MAAA,cAAc,EAAE,KAAKC,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADH;AAQH;;AA9B8C","sourcesContent":["//import React, { Component } from 'react';\n//import axios from 'axios';\n//import Suggestions from './suggestions';\nimport Search from 'react-search'\nimport ReactDOM from 'react-dom'\nimport React, { Component, PropTypes } from 'react'\n\n//const fetchURL = \"https://jsonplaceholder.typicode.com/todos/\";\n//const getItems = () => fetch(fetchURL).then(res => res.json());\n\nexport default class BasicSearch extends Component {\n    constructor (props) {\n        super(props)\n        this.state = { repos: [] }\n     }\n\n     getItemsAsync(searchValue, cb) {\n        let url = `https://api.github.com/search/repositories?q=${searchValue}&language=javascript`\n        //let url = \"https://jsonplaceholder.typicode.com/todos/\";\n\n        fetch(url).then( (response) => {\n           return response.json();\n        }).then((results) => {\n           if(results.items != undefined){\n           let items = results.items.map( (res, i) => { return { id: i, value: res.full_name } })\n           this.setState({ repos: items })\n           cb(searchValue)\n           }\n        });\n     }\n\n     render () {\n        return (\n           <div>\n           <Search items={this.state.repos}\n                    multiple={true}\n                    getItemsAsync={this.getItemsAsync.bind(this)}\n                    onItemsChanged={this.HiItems.bind(this)} />\n           </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}