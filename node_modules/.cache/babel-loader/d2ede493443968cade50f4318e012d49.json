{"ast":null,"code":"var _jsxFileName = \"/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js\";\nimport React, { Component } from 'react'; //import axios from 'axios';\n//import Suggestions from './suggestions';\n\nexport default class BasicSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.token = null;\n    this.state = {\n      query: \"\",\n      people: []\n    };\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        query: value\n      });\n      this.search(value);\n    };\n\n    this.search = query => {\n      const url = `https://swapi.co/api/people?search=${query}`; //const url = `https://jsonplaceholder.typicode.com/users?name=${query}`;\n\n      const token = {};\n      this.token = token;\n      fetch(url).then(results => results.json()).then(data => {\n        if (this.token === token) {\n          this.setState({\n            people: data.results\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.search(\"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-box\",\n      placeholder: \"Search for...\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), this.state.people.map(person => /*#__PURE__*/React.createElement(\"ul\", {\n      key: person.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, person.name))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/basicSearch.js"],"names":["React","Component","BasicSearch","token","state","query","people","onChange","e","value","target","setState","search","url","fetch","then","results","json","data","componentDidMount","render","map","person","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CE,KAD+C,GACvC,IADuC;AAAA,SAE/CC,KAF+C,GAEvC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFuC;;AAAA,SAOjDC,QAPiD,GAOtCC,CAAC,IAAI;AACd,YAAM;AAAEC,QAAAA;AAAF,UAAYD,CAAC,CAACE,MAApB;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEI;AADK,OAAd;AAIA,WAAKG,MAAL,CAAYH,KAAZ;AACD,KAdgD;;AAAA,SAgBjDG,MAhBiD,GAgBxCP,KAAK,IAAI;AAChB,YAAMQ,GAAG,GAAI,sCAAqCR,KAAM,EAAxD,CADgB,CAEhB;;AACA,YAAMF,KAAK,GAAG,EAAd;AACA,WAAKA,KAAL,GAAaA,KAAb;AAEAW,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADnB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAI,KAAKf,KAAL,KAAeA,KAAnB,EAA0B;AACxB,eAAKQ,QAAL,CAAc;AAAEL,YAAAA,MAAM,EAAEY,IAAI,CAACF;AAAf,WAAd;AACD;AACF,OANH;AAOD,KA7BgD;AAAA;;AA+BjDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,MAAL,CAAY,EAAZ;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,QAAQ,EAAE,KAAKb,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,KAAKH,KAAL,CAAWE,MAAX,CAAkBe,GAAlB,CAAsBC,MAAM,iBAC3B;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACC,IAAZ,CADF,CADD,CAPH,CADF;AAeD;;AAnDgD","sourcesContent":["import React, { Component } from 'react';\n//import axios from 'axios';\n//import Suggestions from './suggestions';\n\nexport default class BasicSearch extends Component {\n    token = null;\n    state = {\n        query: \"\",\n        people: []\n    };\n\n  onChange = e => {\n    const { value } = e.target;\n    this.setState({\n      query: value\n    });\n\n    this.search(value);\n  };\n\n  search = query => {\n    const url = `https://swapi.co/api/people?search=${query}`;\n    //const url = `https://jsonplaceholder.typicode.com/users?name=${query}`;\n    const token = {};\n    this.token = token;\n\n    fetch(url)\n      .then(results => results.json())\n      .then(data => {\n        if (this.token === token) {\n          this.setState({ people: data.results });\n        }\n      });\n  };\n\n  componentDidMount() {\n    this.search(\"\");\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          className=\"search-box\"\n          placeholder=\"Search for...\"\n          onChange={this.onChange}\n        />\n        {this.state.people.map(person => (\n          <ul key={person.name}>\n            <li>{person.name}</li>\n          </ul>\n        ))}\n      </form>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}