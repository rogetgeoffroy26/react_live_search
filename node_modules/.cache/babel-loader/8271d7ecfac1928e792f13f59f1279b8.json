{"ast":null,"code":"var _jsxFileName = \"/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/bookItems.js\";\nimport React, { Component } from 'react'; //import PropTypes from 'prop-types';\n\nimport axios from 'axios'; //axios.get('https://jsonplaceholder.typicode.com/users')\n\nexport default class BookItems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      value: ''\n    };\n\n    this.search = async val => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios(`https://jsonplaceholder.typicode.com/users?q=${val}`);\n      const users = await res.data.name;\n      this.setState({\n        users,\n        loading: false\n      });\n    };\n\n    this.onChangeHandler = async e => {\n      this.search(e.target.value);\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  get renderMovies() {\n    let users = /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"n/a\");\n\n    if (this.state.users.name) {\n      users = this.state.users.name;\n    }\n\n    return users;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: e => this.onChangeHandler(e),\n      placeholder: \"Type something to search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), this.renderMovies);\n  }\n\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/components/bookItems.js"],"names":["React","Component","axios","BookItems","state","users","loading","value","search","val","setState","res","data","name","onChangeHandler","e","target","renderMovies","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CG,KAD6C,GACrC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADqC;;AAAA,SAO3CC,MAP2C,GAOlC,MAAMC,GAAN,IAAa;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMK,GAAG,GAAG,MAAMT,KAAK,CACpB,gDAA+CO,GAAI,EAD/B,CAAvB;AAGA,YAAMJ,KAAK,GAAG,MAAMM,GAAG,CAACC,IAAJ,CAASC,IAA7B;AAEA,WAAKH,QAAL,CAAc;AAAEL,QAAAA,KAAF;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAAd;AACD,KAf0C;;AAAA,SAiB3CQ,eAjB2C,GAiBzB,MAAMC,CAAN,IAAW;AAC3B,WAAKP,MAAL,CAAYO,CAAC,CAACC,MAAF,CAAST,KAArB;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEQ,CAAC,CAACC,MAAF,CAAST;AAAlB,OAAd;AACD,KApB0C;AAAA;;AAsB3C,MAAIU,YAAJ,GAAmB;AACjB,QAAIZ,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;;AACA,QAAI,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,IAArB,EAA2B;AACvBR,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,IAAzB;AACH;;AACD,WAAOR,KAAP;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWG,KADpB;AAEE,MAAA,QAAQ,EAAEQ,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,CAFjB;AAGE,MAAA,WAAW,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMG,KAAKE,YANR,CADF;AAUH;;AAzC4C","sourcesContent":["import React, { Component } from 'react'\n//import PropTypes from 'prop-types';\nimport axios from 'axios';\n\n//axios.get('https://jsonplaceholder.typicode.com/users')\nexport default class BookItems extends Component {\n    state = {\n        users: [],\n        loading: false,\n        value: ''\n      };\n    \n      search = async val => {\n        this.setState({ loading: true });\n        const res = await axios(\n          `https://jsonplaceholder.typicode.com/users?q=${val}`\n        );\n        const users = await res.data.name;\n    \n        this.setState({ users, loading: false });\n      };\n    \n      onChangeHandler = async e => {\n        this.search(e.target.value);\n        this.setState({ value: e.target.value });\n      };\n    \n      get renderMovies() {\n        let users = <h1>n/a</h1>;\n        if (this.state.users.name) {\n            users = this.state.users.name;\n        }\n        return users;\n      }\n    \n      render() {\n        return (\n          <div>\n            <input\n              value={this.state.value}\n              onChange={e => this.onChangeHandler(e)}\n              placeholder=\"Type something to search\"\n            />\n            {this.renderMovies}\n          </div>\n        );\n    }\n }\n \n"]},"metadata":{},"sourceType":"module"}