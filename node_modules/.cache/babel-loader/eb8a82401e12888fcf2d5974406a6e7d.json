{"ast":null,"code":"var _jsxFileName = \"/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/search.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './css/search.css';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults = (updatedPageNo = '', query) => {\n      const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : ''; // By default the limit of results is 20\n\n      const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n\n      if (this.cancel) {\n        // Cancel the previous request before making a new request\n        this.cancel.cancel();\n      } // Create a new CancelToken\n\n\n      this.cancel = axios.CancelToken.source();\n      axios.get(searchUrl, {\n        cancelToken: this.cancel.token\n      }).then(res => {\n        const resultNotFoundMsg = !res.data.hits.length ? 'There are no more search results. Please try a new search.' : '';\n        this.setState({\n          results: res.data.hits,\n          message: resultNotFoundMsg,\n          loading: false\n        });\n      }).catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: 'Failed to fetch results.Please check network'\n          });\n        }\n      });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n\n      if (!query) {\n        this.setState({\n          query,\n          results: {},\n          message: ''\n        });\n      } else {\n        this.setState({\n          query,\n          loading: true,\n          message: ''\n        }, () => {\n          this.fetchSearchResults(1, query);\n        });\n      }\n    };\n\n    this.state = {\n      query: '',\n      results: {},\n      loading: false,\n      message: ''\n    };\n    this.cancel = '';\n  }\n  /**\n   * Fetch the search results and update the state with the result.\n   *\n   * @param {int} updatedPageNo Updated Page No.\n   * @param {String} query Search Query.\n   *\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \"Live Search: React Application\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: \"\",\n      id: \"search-input\",\n      placeholder: \"Search...\",\n      onChange: this.handleOnInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/src/search.js"],"names":["React","Component","axios","Search","constructor","props","fetchSearchResults","updatedPageNo","query","pageNumber","searchUrl","cancel","CancelToken","source","get","cancelToken","token","then","res","resultNotFoundMsg","data","hits","length","setState","results","message","loading","catch","error","isCancel","handleOnInputChange","event","target","value","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './css/search.css';\n\n\nexport default class Search extends  Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tquery: '',\n            results: {},\n            loading: false,\n            message: '',\n        };\n        this.cancel = '';\n    }\n\n    /**\n     * Fetch the search results and update the state with the result.\n     *\n     * @param {int} updatedPageNo Updated Page No.\n     * @param {String} query Search Query.\n     *\n    */\n    fetchSearchResults = (updatedPageNo = '', query ) => {\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\n        // By default the limit of results is 20\n        const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n        if (this.cancel) {\n            // Cancel the previous request before making a new request\n            this.cancel.cancel();\n        }\n        // Create a new CancelToken\n        this.cancel = axios.CancelToken.source();\n        axios\n            .get(searchUrl, {\n                cancelToken: this.cancel.token,\n            })\n            .then((res) => {\n                const resultNotFoundMsg = !res.data.hits.length\n                    ? 'There are no more search results. Please try a new search.'\n                    : '';\n                this.setState({\n                    results: res.data.hits,\n                    message: resultNotFoundMsg,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                if (axios.isCancel(error) || error) {\n                    this.setState({\n                        loading: false,\n                        message: 'Failed to fetch results.Please check network',\n                    });\n                }\n            });\n    };\n    \n    handleOnInputChange = (event) => {\n        const query = event.target.value;\n        if ( ! query ) {\n            this.setState({ \n                query, \n                results: {},\n                message: ''\n            });\n        } else{\n            this.setState({ \n                query, \n                loading: true,\n                message: ''\n            },\n            () => { \n                this.fetchSearchResults(1, query);\n            });\n        }\n\n    };\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{/*Heading*/}\n\t\t\t\t<h2 className=\"heading\">Live Search: React Application</h2>\n\t\t\t\t{/*Search Input*/}\n\t\t\t\t<label className=\"search-label\" htmlFor=\"search-input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue=\"\"\n\t\t\t\t\t\tid=\"search-input\"\n                        placeholder=\"Search...\"\n                        onChange={this.handleOnInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<i className=\"fa fa-search search-icon\"/>\n\t\t\t\t</label>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}