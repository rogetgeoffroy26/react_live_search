{"ast":null,"code":"var __root__ = function (root) {\n  function F() {\n    this.fetch = false;\n  }\n\n  F.prototype = root;\n  return new F();\n}(typeof self !== 'undefined' ? self : this);\n\n(function (self) {\n  (function (self) {\n    if (self.fetch) {\n      return;\n    }\n\n    var support = {\n      searchParams: 'URLSearchParams' in self,\n      iterable: 'Symbol' in self && 'iterator' in Symbol,\n      blob: 'FileReader' in self && 'Blob' in self && function () {\n        try {\n          new Blob();\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }(),\n      formData: 'FormData' in self,\n      arrayBuffer: 'ArrayBuffer' in self\n    };\n\n    if (support.arrayBuffer) {\n      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n      var isDataView = function (obj) {\n        return obj && DataView.prototype.isPrototypeOf(obj);\n      };\n\n      var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n      };\n    }\n\n    function normalizeName(name) {\n      if (typeof name !== 'string') {\n        name = String(name);\n      }\n\n      if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n      }\n\n      return name.toLowerCase();\n    }\n\n    function normalizeValue(value) {\n      if (typeof value !== 'string') {\n        value = String(value);\n      }\n\n      return value;\n    } // Build a destructive iterator for the value list\n\n\n    function iteratorFor(items) {\n      var iterator = {\n        next: function () {\n          var value = items.shift();\n          return {\n            done: value === undefined,\n            value: value\n          };\n        }\n      };\n\n      if (support.iterable) {\n        iterator[Symbol.iterator] = function () {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    }\n\n    function Headers(headers) {\n      this.map = {};\n\n      if (headers instanceof Headers) {\n        headers.forEach(function (value, name) {\n          this.append(name, value);\n        }, this);\n      } else if (Array.isArray(headers)) {\n        headers.forEach(function (header) {\n          this.append(header[0], header[1]);\n        }, this);\n      } else if (headers) {\n        Object.getOwnPropertyNames(headers).forEach(function (name) {\n          this.append(name, headers[name]);\n        }, this);\n      }\n    }\n\n    Headers.prototype.append = function (name, value) {\n      name = normalizeName(name);\n      value = normalizeValue(value);\n      var oldValue = this.map[name];\n      this.map[name] = oldValue ? oldValue + ',' + value : value;\n    };\n\n    Headers.prototype['delete'] = function (name) {\n      delete this.map[normalizeName(name)];\n    };\n\n    Headers.prototype.get = function (name) {\n      name = normalizeName(name);\n      return this.has(name) ? this.map[name] : null;\n    };\n\n    Headers.prototype.has = function (name) {\n      return this.map.hasOwnProperty(normalizeName(name));\n    };\n\n    Headers.prototype.set = function (name, value) {\n      this.map[normalizeName(name)] = normalizeValue(value);\n    };\n\n    Headers.prototype.forEach = function (callback, thisArg) {\n      for (var name in this.map) {\n        if (this.map.hasOwnProperty(name)) {\n          callback.call(thisArg, this.map[name], name, this);\n        }\n      }\n    };\n\n    Headers.prototype.keys = function () {\n      var items = [];\n      this.forEach(function (value, name) {\n        items.push(name);\n      });\n      return iteratorFor(items);\n    };\n\n    Headers.prototype.values = function () {\n      var items = [];\n      this.forEach(function (value) {\n        items.push(value);\n      });\n      return iteratorFor(items);\n    };\n\n    Headers.prototype.entries = function () {\n      var items = [];\n      this.forEach(function (value, name) {\n        items.push([name, value]);\n      });\n      return iteratorFor(items);\n    };\n\n    if (support.iterable) {\n      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n    }\n\n    function consumed(body) {\n      if (body.bodyUsed) {\n        return Promise.reject(new TypeError('Already read'));\n      }\n\n      body.bodyUsed = true;\n    }\n\n    function fileReaderReady(reader) {\n      return new Promise(function (resolve, reject) {\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n\n        reader.onerror = function () {\n          reject(reader.error);\n        };\n      });\n    }\n\n    function readBlobAsArrayBuffer(blob) {\n      var reader = new FileReader();\n      var promise = fileReaderReady(reader);\n      reader.readAsArrayBuffer(blob);\n      return promise;\n    }\n\n    function readBlobAsText(blob) {\n      var reader = new FileReader();\n      var promise = fileReaderReady(reader);\n      reader.readAsText(blob);\n      return promise;\n    }\n\n    function readArrayBufferAsText(buf) {\n      var view = new Uint8Array(buf);\n      var chars = new Array(view.length);\n\n      for (var i = 0; i < view.length; i++) {\n        chars[i] = String.fromCharCode(view[i]);\n      }\n\n      return chars.join('');\n    }\n\n    function bufferClone(buf) {\n      if (buf.slice) {\n        return buf.slice(0);\n      } else {\n        var view = new Uint8Array(buf.byteLength);\n        view.set(new Uint8Array(buf));\n        return view.buffer;\n      }\n    }\n\n    function Body() {\n      this.bodyUsed = false;\n\n      this._initBody = function (body) {\n        this._bodyInit = body;\n\n        if (!body) {\n          this._bodyText = '';\n        } else if (typeof body === 'string') {\n          this._bodyText = body;\n        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n          this._bodyBlob = body;\n        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n          this._bodyFormData = body;\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this._bodyText = body.toString();\n        } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n          this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n          this._bodyInit = new Blob([this._bodyArrayBuffer]);\n        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n          this._bodyArrayBuffer = bufferClone(body);\n        } else {\n          throw new Error('unsupported BodyInit type');\n        }\n\n        if (!this.headers.get('content-type')) {\n          if (typeof body === 'string') {\n            this.headers.set('content-type', 'text/plain;charset=UTF-8');\n          } else if (this._bodyBlob && this._bodyBlob.type) {\n            this.headers.set('content-type', this._bodyBlob.type);\n          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n          }\n        }\n      };\n\n      if (support.blob) {\n        this.blob = function () {\n          var rejected = consumed(this);\n\n          if (rejected) {\n            return rejected;\n          }\n\n          if (this._bodyBlob) {\n            return Promise.resolve(this._bodyBlob);\n          } else if (this._bodyArrayBuffer) {\n            return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n          } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as blob');\n          } else {\n            return Promise.resolve(new Blob([this._bodyText]));\n          }\n        };\n\n        this.arrayBuffer = function () {\n          if (this._bodyArrayBuffer) {\n            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n          } else {\n            return this.blob().then(readBlobAsArrayBuffer);\n          }\n        };\n      }\n\n      this.text = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text');\n        } else {\n          return Promise.resolve(this._bodyText);\n        }\n      };\n\n      if (support.formData) {\n        this.formData = function () {\n          return this.text().then(decode);\n        };\n      }\n\n      this.json = function () {\n        return this.text().then(JSON.parse);\n      };\n\n      return this;\n    } // HTTP methods whose capitalization should be normalized\n\n\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n    function normalizeMethod(method) {\n      var upcased = method.toUpperCase();\n      return methods.indexOf(upcased) > -1 ? upcased : method;\n    }\n\n    function Request(input, options) {\n      options = options || {};\n      var body = options.body;\n\n      if (input instanceof Request) {\n        if (input.bodyUsed) {\n          throw new TypeError('Already read');\n        }\n\n        this.url = input.url;\n        this.credentials = input.credentials;\n\n        if (!options.headers) {\n          this.headers = new Headers(input.headers);\n        }\n\n        this.method = input.method;\n        this.mode = input.mode;\n\n        if (!body && input._bodyInit != null) {\n          body = input._bodyInit;\n          input.bodyUsed = true;\n        }\n      } else {\n        this.url = String(input);\n      }\n\n      this.credentials = options.credentials || this.credentials || 'omit';\n\n      if (options.headers || !this.headers) {\n        this.headers = new Headers(options.headers);\n      }\n\n      this.method = normalizeMethod(options.method || this.method || 'GET');\n      this.mode = options.mode || this.mode || null;\n      this.referrer = null;\n\n      if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n        throw new TypeError('Body not allowed for GET or HEAD requests');\n      }\n\n      this._initBody(body);\n    }\n\n    Request.prototype.clone = function () {\n      return new Request(this, {\n        body: this._bodyInit\n      });\n    };\n\n    function decode(body) {\n      var form = new FormData();\n      body.trim().split('&').forEach(function (bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n      return form;\n    }\n\n    function parseHeaders(rawHeaders) {\n      var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n      // https://tools.ietf.org/html/rfc7230#section-3.2\n\n      var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n      preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n\n        if (key) {\n          var value = parts.join(':').trim();\n          headers.append(key, value);\n        }\n      });\n      return headers;\n    }\n\n    Body.call(Request.prototype);\n\n    function Response(bodyInit, options) {\n      if (!options) {\n        options = {};\n      }\n\n      this.type = 'default';\n      this.status = options.status === undefined ? 200 : options.status;\n      this.ok = this.status >= 200 && this.status < 300;\n      this.statusText = 'statusText' in options ? options.statusText : 'OK';\n      this.headers = new Headers(options.headers);\n      this.url = options.url || '';\n\n      this._initBody(bodyInit);\n    }\n\n    Body.call(Response.prototype);\n\n    Response.prototype.clone = function () {\n      return new Response(this._bodyInit, {\n        status: this.status,\n        statusText: this.statusText,\n        headers: new Headers(this.headers),\n        url: this.url\n      });\n    };\n\n    Response.error = function () {\n      var response = new Response(null, {\n        status: 0,\n        statusText: ''\n      });\n      response.type = 'error';\n      return response;\n    };\n\n    var redirectStatuses = [301, 302, 303, 307, 308];\n\n    Response.redirect = function (url, status) {\n      if (redirectStatuses.indexOf(status) === -1) {\n        throw new RangeError('Invalid status code');\n      }\n\n      return new Response(null, {\n        status: status,\n        headers: {\n          location: url\n        }\n      });\n    };\n\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n\n    self.fetch = function (input, init) {\n      return new Promise(function (resolve, reject) {\n        var request = new Request(input, init);\n        var xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n          var options = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n            headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n          };\n          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n          var body = 'response' in xhr ? xhr.response : xhr.responseText;\n          resolve(new Response(body, options));\n        };\n\n        xhr.onerror = function () {\n          reject(new TypeError('Network request failed'));\n        };\n\n        xhr.ontimeout = function () {\n          reject(new TypeError('Network request failed'));\n        };\n\n        xhr.open(request.method, request.url, true);\n\n        if (request.credentials === 'include') {\n          xhr.withCredentials = true;\n        } else if (request.credentials === 'omit') {\n          xhr.withCredentials = false;\n        }\n\n        if ('responseType' in xhr && support.blob) {\n          xhr.responseType = 'blob';\n        }\n\n        request.headers.forEach(function (value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n      });\n    };\n\n    self.fetch.polyfill = true;\n  })(typeof self !== 'undefined' ? self : this);\n}).call(__root__, void 0);\nvar fetch = __root__.fetch;\nvar Response = fetch.Response = __root__.Response;\nvar Request = fetch.Request = __root__.Request;\nvar Headers = fetch.Headers = __root__.Headers;\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = fetch; // Needed for TypeScript consumers without esModuleInterop.\n\n  module.exports.default = fetch;\n}","map":{"version":3,"sources":["/Users/rogetgeoffroy/Desktop/Folders/react_js_folder/react-live-search-app/live-search/node_modules/appbase-js/node_modules/cross-fetch/dist/browser-ponyfill.js"],"names":["__root__","root","F","fetch","prototype","self","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","module","exports","default"],"mappings":"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","sourcesContent":["var __root__ = (function (root) {\nfunction F() { this.fetch = false; }\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\n(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n}).call(__root__, void(0));\nvar fetch = __root__.fetch;\nvar Response = fetch.Response = __root__.Response;\nvar Request = fetch.Request = __root__.Request;\nvar Headers = fetch.Headers = __root__.Headers;\nif (typeof module === 'object' && module.exports) {\nmodule.exports = fetch;\n// Needed for TypeScript consumers without esModuleInterop.\nmodule.exports.default = fetch;\n}\n"]},"metadata":{},"sourceType":"script"}